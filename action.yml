name: 'Install Vulkan SDK'
description: 'Installs the Vulkan SDK and sets the VULKAN_SDK environment variable'
branding:
  icon: 'play'  
  color: 'green'  
inputs:
  vulkan-version:
    description: 'specify a Vulkan SDK release version, e.g. 1.2.162.1'
    default: 'latest'
    required: false
  vulkan-version-linux:
    description: 'specify a linux-specific Vulkan SDK release version, e.g. 1.2.162.1'
    default: ''
    required: false
  vulkan-version-windows:
    description: 'specify a windows-specific Vulkan SDK release version, e.g. 1.2.162.1'
    default: ''
    required: false
runs:
  using: "composite"
  steps: 
    - name: Install SDK Dependencies
      shell: bash
      run: |
        case `uname -s` in
          Linux)
            sudo apt-get install -y ninja-build libwayland-dev libxrandr-dev 
            echo VK_VERSION=${{ inputs.vulkan-version-linux }} >> $GITHUB_ENV
            ;;
          Darwin)
            ;;
          *) # Windows
            curl -L -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip
            unzip ninja-win.zip
            echo $PWD >> $GITHUB_PATH
            echo VK_VERSION=${{ inputs.vulkan-version-windows }} >> $GITHUB_ENV
            ;;
        esac

    - name: Build Vulkan SDK
      shell: bash
      run: |
        VK_VERSION=${VK_VERSION:-${{ inputs.vulkan-version }}}
        echo "VK_VERSION=VK_VERSION" >> $GITHUB_ENV
        echo "requested SDK version is $VK_VERSION" >&2
        $GITHUB_ACTION_PATH/install_vulkan_sdk.sh $VK_VERSION | tee -a $GITHUB_ENV

    - name: Verify Vulkan SDK installation
      shell: bash
      run: |
        if [ -z "$VULKAN_SDK" ]; then
          echo "Failed to install Vulkan SDK $VK_VERSION."
          exit 3
        else
          echo "Vulkan SDK $VK_VERSION ($VULKAN_SDK_VERSION) successfully installed."
        fi
