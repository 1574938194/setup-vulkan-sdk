name: 'Setup Vulkan SDK'
description: 'Configures the core Vulkan SDK and sets VULKAN_SDK environment variable.'
branding:
  icon: 'play'  
  color: 'red'  
inputs:
  vulkan-version:
    description: 'Vulkan SDK release version, e.g. 1.2.162.1'
    default: 'latest'
    required: false
  vulkan-config-file:
    description: 'file path to project local SDK spec (will override vulkan-version if both are specified)'
    required: false
  vulkan-components:
    description: 'specify which Vulkan SDK components to install, e.g. headers, loader, glslang'
    default: headers, loader
    required: false
  vulkan-use-cache:
    description: 'specify whether to cache VULKAN_SDK/ results between runs (using github actions/cache)'
    default: false
    required: false
runs:
  using: "composite"
  steps: 
    - name: Configure Vulkan Prerequisites
      shell: bash
      run: |
        case `uname -s` in
          Darwin) ;;
          Linux) 
            sudo apt-get -qq update 
            sudo apt-get -qq install -y libwayland-dev libxrandr-dev
          ;;
          MINGW*) ;;
        esac

    - name: Check Vulkan SDK Cache
      if: inputs.vulkan-use-cache != 'false'
      id: vulkan-cached-sdk
      uses: actions/cache@v2
      with:
        path: VULKAN_SDK
        key: ${{ runner.os }}-vulkan-cached-sdk-${{ inputs.vulkan-version }}-${{ hashFiles(inputs.vulkan-config-file) }}-${{ inputs.vulkan-components }}


    - name: Configure Vulkan SDK
      if: steps.vulkan-cached-sdk.outputs.cache-hit != 'true'
      shell: bash
      run: |
        VK_VERSION=${VK_VERSION:-${{ inputs.vulkan-version }}}
        VK_CONFIG_FILE=${VK_CONFIG_FILE:-${{ inputs.vulkan-config-file }}}
        VK_COMPONENTS=${VK_COMPONENTS:-${{ inputs.vulkan-components }}}
        echo "VK_CONFIG_FILE=$VK_CONFIG_FILE" >> $GITHUB_ENV
        echo "VK_VERSION=$VK_VERSION" >> $GITHUB_ENV
        echo "VK_COMPONENTS=$VK_COMPONENTS" >> $GITHUB_ENV
        test -d VULKAN_SDK || mkdir VULKAN_SDK
        touch VULKAN_SDK/env
        case `uname -s` in
          Darwin) ;;
          Linux) . $GITHUB_ACTION_PATH/prereqs/ubuntu.sh ;;
          MINGW*) . $GITHUB_ACTION_PATH/prereqs/windows-2021.sh ;;
        esac
        if [[ -n "${VK_CONFIG_FILE}" ]] ; then
          echo "requested SDK config file is $VK_CONFIG_FILE [ $VK_COMPONENTS ]"
          GITHUB_ENV=VULKAN_SDK/env $GITHUB_ACTION_PATH/install_vulkan_sdk.sh --config "${VK_CONFIG_FILE}" $VK_COMPONENTS
        else
          echo "requested SDK version is $VK_VERSION [ $VK_COMPONENTS ]"
          GITHUB_ENV=VULKAN_SDK/env $GITHUB_ACTION_PATH/install_vulkan_sdk.sh --release $VK_VERSION $VK_COMPONENTS
        fi

    - name: Finalize SDK installation
      shell: bash
      run: |
        . VULKAN_SDK/env
        cat VULKAN_SDK/env >> $GITHUB_ENV
        if [ -z "$VULKAN_SDK" ]; then
          echo "Failed to install Vulkan SDK $VK_VERSION."
          exit 3
        else
          echo "Vulkan SDK $VK_VERSION ($VULKAN_SDK_VERSION) successfully installed to $VULKAN_SDK."
        fi
